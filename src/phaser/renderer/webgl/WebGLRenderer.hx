package phaser.renderer.webgl;

@:native("Phaser.Renderer.WebGL.WebGLRenderer")
extern class WebGLRenderer {
    public function new(game:phaser.Game);
    public var config:RendererConfig;
    public var game:phaser.Game;
    public var type:Int;
    public var width:Float;
    public var height:Float;
    public var canvas:js.html.CanvasElement;
    public var lostContextCallbacks:Array<WebGLContextCallback>;
    public var restoredContextCallbacks:Array<WebGLContextCallback>;
    public var blendModes:Array<Dynamic>;
    public var nativeTextures:Array<Dynamic>;
    public var contextLost:Bool;
    public var pipelines:Dynamic;
    public var snapshotState:SnapshotState;
    public var currentActiveTextureUnit:Int;
    public var currentTextures:Array<Dynamic>;
    public var currentFramebuffer:js.html.webgl.Framebuffer;
    public var currentPipeline:phaser.renderer.webgl.WebGLPipeline;
    public var currentProgram:js.html.webgl.Program;
    public var currentVertexBuffer:js.html.webgl.Buffer;
    public var currentIndexBuffer:js.html.webgl.Buffer;
    public var currentBlendMode:Int;
    public var currentScissorEnabled:Bool;
    public var currentScissor:js.html.Uint32Array;
    public var scissorStack:js.html.Uint32Array;
    public var gl:js.html.webgl.RenderingContext;
    public var supportedExtensions:Dynamic;
    public var extensions:Dynamic;
    public var glFormats:Array<Dynamic>;
    public var compression:Array<Dynamic>;
    public var drawingBufferHeight:Float;
    public var blankTexture:js.html.webgl.Texture;
    public function init(config:Dynamic):Dynamic;
    public function resize(width:Float, height:Float):Dynamic;
    public function onContextRestored(callback:WebGLContextCallback, target:Dynamic):Dynamic;
    public function onContextLost(callback:WebGLContextCallback, target:Dynamic):Dynamic;
    public function hasExtension(extensionName:String):Bool;
    public function getExtension(extensionName:String):Dynamic;
    public function flush():Void;
    public function hasPipeline(pipelineName:String):Bool;
    public function getPipeline(pipelineName:String):phaser.renderer.webgl.WebGLPipeline;
    public function removePipeline(pipelineName:String):Dynamic;
    public function addPipeline(pipelineName:String, pipelineInstance:phaser.renderer.webgl.WebGLPipeline):phaser.renderer.webgl.WebGLPipeline;
    public function pushScissor(x:Int, y:Int, width:Int, height:Int):Array<Int>;
    public function setScissor(x:Int, y:Int, width:Int, height:Int):Void;
    public function popScissor():Void;
    public function setPipeline(pipelineInstance:phaser.renderer.webgl.WebGLPipeline, ?gameObject:phaser.gameobjects.GameObject):phaser.renderer.webgl.WebGLPipeline;
    public function setBlendMode(blendModeId:Int):Bool;
    public function addBlendMode(func:Dynamic, equation:Dynamic):Int;
    public function updateBlendMode(index:Int, func:Dynamic, equation:Dynamic):Dynamic;
    public function removeBlendMode(index:Int):Dynamic;
    public function setTexture2D(texture:js.html.webgl.Texture, textureUnit:Int):Dynamic;
    public function setFramebuffer(framebuffer:js.html.webgl.Framebuffer):Dynamic;
    public function setProgram(program:js.html.webgl.Program):Dynamic;
    public function setVertexBuffer(vertexBuffer:js.html.webgl.Buffer):Dynamic;
    public function setIndexBuffer(indexBuffer:js.html.webgl.Buffer):Dynamic;
    public function createTextureFromSource(source:Dynamic, width:Int, height:Int, scaleMode:Int):js.html.webgl.Texture;
    public function createTexture2D(mipLevel:Int, minFilter:Int, magFilter:Int, wrapT:Int, wrapS:Int, format:Int, pixels:Dynamic, width:Int, height:Int, pma:Bool):js.html.webgl.Texture;
    public function createFramebuffer(width:Int, height:Int, renderTexture:js.html.webgl.Texture, addDepthStencilBuffer:Bool):js.html.webgl.Framebuffer;
    public function createProgram(vertexShader:String, fragmentShader:String):js.html.webgl.Program;
    public function createVertexBuffer(initialDataOrSize:js.html.ArrayBuffer, bufferUsage:Int):js.html.webgl.Buffer;
    public function createIndexBuffer(initialDataOrSize:js.html.ArrayBuffer, bufferUsage:Int):js.html.webgl.Buffer;
    public function deleteTexture(texture:js.html.webgl.Texture):Dynamic;
    public function deleteFramebuffer(framebuffer:js.html.webgl.Framebuffer):Dynamic;
    public function deleteProgram(program:js.html.webgl.Program):Dynamic;
    public function deleteBuffer(vertexBuffer:js.html.webgl.Buffer):Dynamic;
    public function preRenderCamera(camera:phaser.cameras.scene2d.Camera):Void;
    public function postRenderCamera(camera:phaser.cameras.scene2d.Camera):Void;
    public function preRender():Void;
    public function render(scene:phaser.Scene, children:phaser.gameobjects.GameObject, interpolationPercentage:Float, camera:phaser.cameras.scene2d.Camera):Void;
    public function postRender():Void;
    public function snapshot(callback:SnapshotCallback, type:String, encoderOptions:Float):phaser.renderer.webgl.WebGLRenderer;
    public function canvasToTexture(srcCanvas:js.html.CanvasElement, ?dstTexture:js.html.webgl.Texture):js.html.webgl.Texture;
    public function setTextureFilter(texture:Int, filter:Int):Dynamic;
    public function setFloat1(program:js.html.webgl.Program, name:String, x:Float):Dynamic;
    public function setFloat2(program:js.html.webgl.Program, name:String, x:Float, y:Float):Dynamic;
    public function setFloat3(program:js.html.webgl.Program, name:String, x:Float, y:Float, z:Float):Dynamic;
    public function setFloat4(program:js.html.webgl.Program, name:String, x:Float, y:Float, z:Float, w:Float):Dynamic;
    public function setFloat1v(program:js.html.webgl.Program, name:String, arr:js.html.Float32Array):Dynamic;
    public function setFloat2v(program:js.html.webgl.Program, name:String, arr:js.html.Float32Array):Dynamic;
    public function setFloat3v(program:js.html.webgl.Program, name:String, arr:js.html.Float32Array):Dynamic;
    public function setFloat4v(program:js.html.webgl.Program, name:String, arr:js.html.Float32Array):Dynamic;
    public function setInt1(program:js.html.webgl.Program, name:String, x:Int):Dynamic;
    public function setInt2(program:js.html.webgl.Program, name:String, x:Int, y:Int):Dynamic;
    public function setInt3(program:js.html.webgl.Program, name:String, x:Int, y:Int, z:Int):Dynamic;
    public function setInt4(program:js.html.webgl.Program, name:String, x:Int, y:Int, z:Int, w:Int):Dynamic;
    public function setMatrix2(program:js.html.webgl.Program, name:String, transpose:Bool, matrix:js.html.Float32Array):Dynamic;
    public function setMatrix3(program:js.html.webgl.Program, name:String, transpose:Bool, matrix:js.html.Float32Array):Dynamic;
    public function setMatrix4(program:js.html.webgl.Program, name:String, transpose:Bool, matrix:js.html.Float32Array):Dynamic;
    public function getMaxTextures():Int;
    public function getMaxTextureSize():Int;
    public function destroy():Void;
}
