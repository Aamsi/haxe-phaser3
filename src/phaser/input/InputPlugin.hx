package phaser.input;

@:native("Phaser.Input.InputPlugin")
extern class InputPlugin extends phaser.events.EventEmitter {
    public function new(scene:phaser.Scene);
    public var scene:phaser.Scene;
    public var systems:phaser.scenes.Systems;
    public var settings:phaser.scenes.settings.Object;
    public var manager:phaser.input.InputManager;
    public var enabled:Bool;
    public var displayList:phaser.gameobjects.DisplayList;
    public var cameras:phaser.cameras.scene2d.CameraManager;
    public var mouse:phaser.input.mouse.MouseManager;
    public var topOnly:Bool;
    public var pollRate:Int;
    public var dragDistanceThreshold:Float;
    public var dragTimeThreshold:Float;
    public var x:Float;
    public var y:Float;
    public var mousePointer:phaser.input.Pointer;
    public var activePointer:phaser.input.Pointer;
    public var pointer1:phaser.input.Pointer;
    public var pointer2:phaser.input.Pointer;
    public var pointer3:phaser.input.Pointer;
    public var pointer4:phaser.input.Pointer;
    public var pointer5:phaser.input.Pointer;
    public var pointer6:phaser.input.Pointer;
    public var pointer7:phaser.input.Pointer;
    public var pointer8:phaser.input.Pointer;
    public var pointer9:phaser.input.Pointer;
    public var pointer10:phaser.input.Pointer;
    public var gamepad:phaser.input.gamepad.GamepadPlugin;
    public var keyboard:phaser.input.keyboard.KeyboardPlugin;
    public function isActive():Bool;
    public function clear(gameObject:phaser.gameobjects.GameObject):phaser.gameobjects.GameObject;
    public function disable(gameObject:phaser.gameobjects.GameObject):Void;
    public function enable(gameObject:phaser.gameobjects.GameObject, ?shape:Dynamic, ?callback:HitAreaCallback, ?dropZone:Bool):phaser.input.InputPlugin;
    public function hitTestPointer(pointer:phaser.input.Pointer):Array<phaser.gameobjects.GameObject>;
    public function setDraggable(gameObjects:Dynamic, ?value:Bool):phaser.input.InputPlugin;
    public function makePixelPerfect(?alphaTolerance:Int):Dynamic;
    public function setHitArea(gameObjects:Dynamic, ?shape:Dynamic, ?callback:HitAreaCallback):phaser.input.InputPlugin;
    public function setHitAreaCircle(gameObjects:Dynamic, x:Float, y:Float, radius:Float, ?callback:HitAreaCallback):phaser.input.InputPlugin;
    public function setHitAreaEllipse(gameObjects:Dynamic, x:Float, y:Float, width:Float, height:Float, ?callback:HitAreaCallback):phaser.input.InputPlugin;
    public function setHitAreaFromTexture(gameObjects:Dynamic, ?callback:HitAreaCallback):phaser.input.InputPlugin;
    public function setHitAreaRectangle(gameObjects:Dynamic, x:Float, y:Float, width:Float, height:Float, ?callback:HitAreaCallback):phaser.input.InputPlugin;
    public function setHitAreaTriangle(gameObjects:Dynamic, x1:Float, y1:Float, x2:Float, y2:Float, x3:Float, y3:Float, ?callback:HitAreaCallback):phaser.input.InputPlugin;
    public function setPollAlways():phaser.input.InputPlugin;
    public function setPollOnMove():phaser.input.InputPlugin;
    public function setPollRate(value:Float):phaser.input.InputPlugin;
    public function setGlobalTopOnly(value:Bool):phaser.input.InputPlugin;
    public function setTopOnly(value:Bool):phaser.input.InputPlugin;
    public function sortGameObjects(gameObjects:Array<phaser.gameobjects.GameObject>):Array<phaser.gameobjects.GameObject>;
    public function stopPropagation():phaser.input.InputPlugin;
    public function addUpCallback(callback:Dynamic, ?isOnce:Bool):Dynamic;
    public function addDownCallback(callback:Dynamic, ?isOnce:Bool):Dynamic;
    public function addMoveCallback(callback:Dynamic, ?isOnce:Bool):Dynamic;
    public function addPointer(?quantity:Int):Array<phaser.input.Pointer>;
    public function setDefaultCursor(cursor:String):phaser.input.InputPlugin;
}
