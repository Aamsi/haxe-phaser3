package phaser.geom;

@:native("Phaser.Geom.Rectangle")
extern class Rectangle {
    public function new(?x:Float, ?y:Float, ?width:Float, ?height:Float);
    public var x:Float;
    public var y:Float;
    public var width:Float;
    public var height:Float;
    public var left:Float;
    public var right:Float;
    public var top:Float;
    public var bottom:Float;
    public var centerX:Float;
    public var centerY:Float;
    public function Area(rect:phaser.geom.Rectangle):Float;
    public function Ceil(rect:phaser.geom.Rectangle):phaser.geom.Rectangle;
    public function CeilAll(rect:phaser.geom.Rectangle):phaser.geom.Rectangle;
    public function CenterOn(rect:phaser.geom.Rectangle, x:Float, y:Float):phaser.geom.Rectangle;
    public function Clone(source:phaser.geom.Rectangle):phaser.geom.Rectangle;
    public function Contains(rect:phaser.geom.Rectangle, x:Float, y:Float):Bool;
    public function ContainsPoint(rect:phaser.geom.Rectangle, point:phaser.geom.Point):Bool;
    public function ContainsRect(rectA:phaser.geom.Rectangle, rectB:phaser.geom.Rectangle):Bool;
    public function CopyFrom(source:phaser.geom.Rectangle, dest:phaser.geom.Rectangle):phaser.geom.Rectangle;
    public function Decompose(rect:phaser.geom.Rectangle, ?out:Array<Dynamic>):Array<Dynamic>;
    public function Equals(rect:phaser.geom.Rectangle, toCompare:phaser.geom.Rectangle):Bool;
    public function FitInside(target:phaser.geom.Rectangle, source:phaser.geom.Rectangle):phaser.geom.Rectangle;
    public function FitOutside(target:phaser.geom.Rectangle, source:phaser.geom.Rectangle):phaser.geom.Rectangle;
    public function Floor(rect:phaser.geom.Rectangle):phaser.geom.Rectangle;
    public function FloorAll(rect:phaser.geom.Rectangle):phaser.geom.Rectangle;
    public function FromPoints(points:Array<Dynamic>, ?out:phaser.geom.Rectangle):phaser.geom.Rectangle;
    public function GetAspectRatio(rect:phaser.geom.Rectangle):Float;
    public function GetCenter(rect:phaser.geom.Rectangle, ?out:Dynamic):phaser.geom.Point;
    public function GetPoint(rectangle:phaser.geom.Rectangle, position:Float, ?out:Dynamic):phaser.geom.Point;
    public function GetPoints(rectangle:phaser.geom.Rectangle, step:Float, quantity:Int, ?out:Dynamic):Array<Dynamic>;
    public function GetSize(rect:phaser.geom.Rectangle, ?out:Dynamic):phaser.geom.Point;
    public function Inflate(rect:phaser.geom.Rectangle, x:Float, y:Float):phaser.geom.Rectangle;
    public function Intersection(rectA:phaser.geom.Rectangle, rectB:phaser.geom.Rectangle, ?out:phaser.geom.Rectangle):phaser.geom.Rectangle;
    public function MarchingAnts(rect:phaser.geom.Rectangle, step:Float, quantity:Int, ?out:Dynamic):Array<Dynamic>;
    public function MergePoints(target:phaser.geom.Rectangle, points:Array<phaser.geom.Point>):phaser.geom.Rectangle;
    public function MergeRect(target:phaser.geom.Rectangle, source:phaser.geom.Rectangle):phaser.geom.Rectangle;
    public function MergeXY(target:phaser.geom.Rectangle, x:Float, y:Float):phaser.geom.Rectangle;
    public function Offset(rect:phaser.geom.Rectangle, x:Float, y:Float):phaser.geom.Rectangle;
    public function OffsetPoint(rect:phaser.geom.Rectangle, point:Dynamic):phaser.geom.Rectangle;
    public function Overlaps(rectA:phaser.geom.Rectangle, rectB:phaser.geom.Rectangle):Bool;
    public function Perimeter(rect:phaser.geom.Rectangle):Float;
    public function PerimeterPoint(rectangle:phaser.geom.Rectangle, angle:Int, ?out:phaser.geom.Point):phaser.geom.Point;
    public function Random(rect:phaser.geom.Rectangle, out:phaser.geom.Point):phaser.geom.Point;
    public function RandomOutside(outer:phaser.geom.Rectangle, inner:phaser.geom.Rectangle, ?out:phaser.geom.Point):phaser.geom.Point;
    public function contains(x:Float, y:Float):Bool;
    public function getPoint(position:Float, ?output:Dynamic):phaser.geom.Point;
    public function getPoints(quantity:Int, ?stepRate:Float, ?output:Dynamic):Array<Dynamic>;
    public function getRandomPoint(?point:phaser.geom.Point):phaser.geom.Point;
    public function setTo(x:Float, y:Float, width:Float, height:Float):phaser.geom.Rectangle;
    public function setEmpty():phaser.geom.Rectangle;
    public function setPosition(x:Float, ?y:Float):phaser.geom.Rectangle;
    public function setSize(width:Float, ?height:Float):phaser.geom.Rectangle;
    public function isEmpty():Bool;
    public function getLineA(?line:phaser.geom.Line):phaser.geom.Line;
    public function getLineB(?line:phaser.geom.Line):phaser.geom.Line;
    public function getLineC(?line:phaser.geom.Line):phaser.geom.Line;
    public function getLineD(?line:phaser.geom.Line):phaser.geom.Line;
    public function Scale(rect:phaser.geom.Rectangle, x:Float, y:Float):phaser.geom.Rectangle;
    public function Union(rectA:phaser.geom.Rectangle, rectB:phaser.geom.Rectangle, ?out:phaser.geom.Rectangle):phaser.geom.Rectangle;
}
