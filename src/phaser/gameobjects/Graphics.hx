package phaser.gameobjects;

@:native("Phaser.GameObjects.Graphics")
extern class Graphics extends phaser.gameobjects.GameObject {
    public function new(scene:phaser.Scene, options:GraphicsOptions);
    public var displayOriginX:Float;
    public var displayOriginY:Float;
    public var commandBuffer:Array<Dynamic>;
    public var defaultFillColor:Float;
    public var defaultFillAlpha:Float;
    public var defaultStrokeWidth:Float;
    public var defaultStrokeColor:Float;
    public var defaultStrokeAlpha:Float;
    public var TargetCamera:phaser.cameras.scene2d.Camera;
    public function setDefaultStyles(options:GraphicsStyles):phaser.gameobjects.Graphics;
    public function lineStyle(lineWidth:Float, color:Float, ?alpha:Float):phaser.gameobjects.Graphics;
    public function fillStyle(color:Float, ?alpha:Float):phaser.gameobjects.Graphics;
    public function beginPath():phaser.gameobjects.Graphics;
    public function closePath():phaser.gameobjects.Graphics;
    public function fillPath():phaser.gameobjects.Graphics;
    public function strokePath():phaser.gameobjects.Graphics;
    public function fillCircleShape(circle:phaser.geom.Circle):phaser.gameobjects.Graphics;
    public function strokeCircleShape(circle:phaser.geom.Circle):phaser.gameobjects.Graphics;
    public function fillCircle(x:Float, y:Float, radius:Float):phaser.gameobjects.Graphics;
    public function strokeCircle(x:Float, y:Float, radius:Float):phaser.gameobjects.Graphics;
    public function fillRectShape(rect:phaser.geom.Rectangle):phaser.gameobjects.Graphics;
    public function strokeRectShape(rect:phaser.geom.Rectangle):phaser.gameobjects.Graphics;
    public function fillRect(x:Float, y:Float, width:Float, height:Float):phaser.gameobjects.Graphics;
    public function strokeRect(x:Float, y:Float, width:Float, height:Float):phaser.gameobjects.Graphics;
    public function fillPointShape(point:Dynamic, ?size:Float):phaser.gameobjects.Graphics;
    public function fillPoint(x:Float, y:Float, ?size:Float):phaser.gameobjects.Graphics;
    public function fillTriangleShape(triangle:phaser.geom.Triangle):phaser.gameobjects.Graphics;
    public function strokeTriangleShape(triangle:phaser.geom.Triangle):phaser.gameobjects.Graphics;
    public function fillTriangle(x0:Float, y0:Float, x1:Float, y1:Float, x2:Float, y2:Float):phaser.gameobjects.Graphics;
    public function strokeTriangle(x0:Float, y0:Float, x1:Float, y1:Float, x2:Float, y2:Float):phaser.gameobjects.Graphics;
    public function strokeLineShape(line:phaser.geom.Line):phaser.gameobjects.Graphics;
    public function lineBetween(x1:Float, y1:Float, x2:Float, y2:Float):phaser.gameobjects.Graphics;
    public function lineTo(x:Float, y:Float):phaser.gameobjects.Graphics;
    public function moveTo(x:Float, y:Float):phaser.gameobjects.Graphics;
    public function lineFxTo(x:Float, y:Float, width:Float, rgb:Float):phaser.gameobjects.Graphics;
    public function moveFxTo(x:Float, y:Float, width:Float, rgb:Float):phaser.gameobjects.Graphics;
    public function strokePoints(points:Dynamic, ?autoClose:Bool, ?endIndex:Int):phaser.gameobjects.Graphics;
    public function fillPoints(points:Dynamic, ?autoClose:Bool, ?endIndex:Int):phaser.gameobjects.Graphics;
    public function strokeEllipseShape(ellipse:phaser.geom.Ellipse, ?smoothness:Int):phaser.gameobjects.Graphics;
    public function strokeEllipse(x:Float, y:Float, width:Float, height:Float, ?smoothness:Int):phaser.gameobjects.Graphics;
    public function fillEllipseShape(ellipse:phaser.geom.Ellipse, ?smoothness:Int):phaser.gameobjects.Graphics;
    public function fillEllipse(x:Float, y:Float, width:Float, height:Float, ?smoothness:Int):phaser.gameobjects.Graphics;
    public function arc(x:Float, y:Float, radius:Float, startAngle:Float, endAngle:Float, ?anticlockwise:Bool):phaser.gameobjects.Graphics;
    public function slice(x:Float, y:Float, radius:Float, startAngle:Float, endAngle:Float, ?anticlockwise:Bool):phaser.gameobjects.Graphics;
    public function save():phaser.gameobjects.Graphics;
    public function restore():phaser.gameobjects.Graphics;
    public function translate(x:Float, y:Float):phaser.gameobjects.Graphics;
    public function scale(x:Float, y:Float):phaser.gameobjects.Graphics;
    public function rotate(radians:Float):phaser.gameobjects.Graphics;
    public function clear():phaser.gameobjects.Graphics;
    public function generateTexture(key:Dynamic, ?width:Int, ?height:Int):phaser.gameobjects.Graphics;
    public function preDestroy():Void;
    public var alpha:Float;
    public var alphaTopLeft:Float;
    public var alphaTopRight:Float;
    public var alphaBottomLeft:Float;
    public var alphaBottomRight:Float;
    public function clearAlpha():Dynamic;
    public function setAlpha(?topLeft:Float, ?topRight:Float, ?bottomLeft:Float, ?bottomRight:Float):Dynamic;
    public var blendMode:Dynamic;
    public function setBlendMode(value:Dynamic):Dynamic;
    public var depth:Float;
    public function setDepth(value:Int):Dynamic;
    public var mask:Dynamic;
    public function setMask(mask:Dynamic):Dynamic;
    public function clearMask(?destroyMask:Bool):Dynamic;
    public function createBitmapMask(?renderable:phaser.gameobjects.GameObject):phaser.display.masks.BitmapMask;
    public function createGeometryMask(?graphics:phaser.gameobjects.Graphics):phaser.display.masks.GeometryMask;
    public var defaultPipeline:phaser.renderer.webgl.WebGLPipeline;
    public var pipeline:phaser.renderer.webgl.WebGLPipeline;
    public function initPipeline(pipelineName:String):Bool;
    public function setPipeline(pipelineName:String):Bool;
    public function resetPipeline():Bool;
    public function getPipelineName():String;
    public var x:Float;
    public var y:Float;
    public var z:Float;
    public var w:Float;
    public var scaleX:Float;
    public var scaleY:Float;
    public var angle:Int;
    public var rotation:Float;
    public function setPosition(?x:Float, ?y:Float, ?z:Float, ?w:Float):Dynamic;
    public function setRandomPosition(?x:Float, ?y:Float, ?width:Float, ?height:Float):Dynamic;
    public function setRotation(?radians:Float):Dynamic;
    public function setAngle(?degrees:Float):Dynamic;
    public function setScale(x:Float, ?y:Float):Dynamic;
    public function setX(?value:Float):Dynamic;
    public function setY(?value:Float):Dynamic;
    public function setZ(?value:Float):Dynamic;
    public function setW(?value:Float):Dynamic;
    public function getLocalTransformMatrix(?tempMatrix:phaser.gameobjects.components.TransformMatrix):phaser.gameobjects.components.TransformMatrix;
    public function getWorldTransformMatrix(?tempMatrix:phaser.gameobjects.components.TransformMatrix):phaser.gameobjects.components.TransformMatrix;
    public var visible:Bool;
    public function setVisible(value:Bool):Dynamic;
    public var scrollFactorX:Float;
    public var scrollFactorY:Float;
    public function setScrollFactor(x:Float, ?y:Float):Dynamic;
}
