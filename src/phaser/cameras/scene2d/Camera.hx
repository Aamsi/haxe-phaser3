package phaser.cameras.scene2d;

@:native("Phaser.Cameras.Scene2D.Camera")
extern class Camera extends phaser.events.EventEmitter {
    public function new(x:Float, y:Float, width:Float, height:Float);
    public var scene:phaser.Scene;
    public var id:Int;
    public var name:String;
    public var x:Float;
    public var y:Float;
    public var roundPixels:Bool;
    public var visible:Bool;
    public var useBounds:Bool;
    public var worldView:phaser.geom.Rectangle;
    public var dirty:Bool;
    public var inputEnabled:Bool;
    public var transparent:Bool;
    public var backgroundColor:phaser.display.Color;
    public var alpha:Float;
    public var fadeEffect:phaser.cameras.scene2d.effects.Fade;
    public var flashEffect:phaser.cameras.scene2d.effects.Flash;
    public var shakeEffect:phaser.cameras.scene2d.effects.Shake;
    public var panEffect:phaser.cameras.scene2d.effects.Pan;
    public var zoomEffect:phaser.cameras.scene2d.effects.Zoom;
    public var disableCull:Bool;
    public var lerp:phaser.math.Vector2;
    public var followOffset:phaser.math.Vector2;
    public var midPoint:phaser.math.Vector2;
    public var originX:Float;
    public var originY:Float;
    public var deadzone:phaser.geom.Rectangle;
    public var width:Float;
    public var height:Float;
    public var scrollX:Float;
    public var scrollY:Float;
    public var zoom:Float;
    public var centerX:Float;
    public var centerY:Float;
    public var displayWidth:Float;
    public var displayHeight:Float;
    public function setDeadzone(?width:Float, ?height:Float):phaser.cameras.scene2d.Camera;
    public function getScroll(x:Float, y:Float, ?out:phaser.math.Vector2):phaser.math.Vector2;
    public function centerOn(x:Float, y:Float):phaser.cameras.scene2d.Camera;
    public function centerToBounds():phaser.cameras.scene2d.Camera;
    public function centerToSize():phaser.cameras.scene2d.Camera;
    public function cull(renderableObjects:Array<phaser.gameobjects.GameObject>):Array<phaser.gameobjects.GameObject>;
    public function fadeIn(?duration:Int, ?red:Int, ?green:Int, ?blue:Int, ?callback:Dynamic, ?context:Dynamic):phaser.cameras.scene2d.Camera;
    public function fadeOut(?duration:Int, ?red:Int, ?green:Int, ?blue:Int, ?callback:Dynamic, ?context:Dynamic):phaser.cameras.scene2d.Camera;
    public function fadeFrom(?duration:Int, ?red:Int, ?green:Int, ?blue:Int, ?force:Bool, ?callback:Dynamic, ?context:Dynamic):phaser.cameras.scene2d.Camera;
    public function fade(?duration:Int, ?red:Int, ?green:Int, ?blue:Int, ?force:Bool, ?callback:Dynamic, ?context:Dynamic):phaser.cameras.scene2d.Camera;
    public function flash(?duration:Int, ?red:Int, ?green:Int, ?blue:Int, ?force:Bool, ?callback:Dynamic, ?context:Dynamic):phaser.cameras.scene2d.Camera;
    public function shake(?duration:Int, ?intensity:Float, ?force:Bool, ?callback:Dynamic, ?context:Dynamic):phaser.cameras.scene2d.Camera;
    public function pan(x:Float, y:Float, ?duration:Int, ?ease:Dynamic, ?force:Bool, ?callback:CameraPanCallback, ?context:Dynamic):phaser.cameras.scene2d.Camera;
    public function zoomTo(zoom:Float, ?duration:Int, ?ease:Dynamic, ?force:Bool, ?callback:CameraPanCallback, ?context:Dynamic):phaser.cameras.scene2d.Camera;
    public function getWorldPoint(x:Float, y:Float, ?output:Dynamic):phaser.math.Vector2;
    public function ignore(gameObject:Dynamic):phaser.cameras.scene2d.Camera;
    public function preRender(baseScale:Float, resolution:Float):Void;
    public function clampX(x:Float):Float;
    public function clampY(y:Float):Float;
    public function removeBounds():phaser.cameras.scene2d.Camera;
    public function setAngle(?value:Float):phaser.cameras.scene2d.Camera;
    public function setLerp(?x:Float, ?y:Float):Dynamic;
    public function setFollowOffset(?x:Float, ?y:Float):Dynamic;
    public function setBackgroundColor(?color:Dynamic):phaser.cameras.scene2d.Camera;
    public function setBounds(x:Int, y:Int, width:Int, height:Int, ?centerOn:Bool):phaser.cameras.scene2d.Camera;
    public function setName(?value:String):phaser.cameras.scene2d.Camera;
    public function setPosition(x:Float, ?y:Float):phaser.cameras.scene2d.Camera;
    public function setRotation(?value:Float):phaser.cameras.scene2d.Camera;
    public function setRoundPixels(value:Bool):phaser.cameras.scene2d.Camera;
    public function setScene(scene:phaser.Scene):phaser.cameras.scene2d.Camera;
    public function setScroll(x:Float, ?y:Float):phaser.cameras.scene2d.Camera;
    public function setSize(width:Int, ?height:Int):phaser.cameras.scene2d.Camera;
    public function setViewport(x:Float, y:Float, width:Int, ?height:Int):phaser.cameras.scene2d.Camera;
    public function setZoom(?value:Float):phaser.cameras.scene2d.Camera;
    public function setVisible(value:Bool):Dynamic;
    public function startFollow(target:Dynamic, ?roundPixels:Bool, ?lerpX:Float, ?lerpY:Float, ?offsetX:Float, ?offsetY:Float):Dynamic;
    public function stopFollow():phaser.cameras.scene2d.Camera;
    public function toJSON():JSONCamera;
    public function resetFX():phaser.cameras.scene2d.Camera;
    public function update(time:Int, delta:Float):Void;
}
